{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAtCGQ,SAASC,cAAc,QAI/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAM,EACNC,EAAWC,OAAON,EAAMO,OAC5B,MAAMC,EAAYF,OAAOJ,EAAOK,OAC1BE,EAAUH,OAAOL,EAAKM,OAE5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAWE,GAAK,EAClC1B,EAAcoB,EAAKC,GAChBM,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAEhE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,IAEhEkB,GAAO,EACPC,GAAYI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formRef = document.querySelector('form');\n\nlet timerId = null;\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let pos = 1;\n  let delayNum = Number(delay.value);\n  const amountNum = Number(amount.value);\n  const stepNum = Number(step.value);\n\n  for (let i = 0; i < amountNum; i += 1) {\n    createPromise(pos, delayNum)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    pos += 1;\n    delayNum += stepNum;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","pos","delayNum","Number","value","amountNum","stepNum","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.52c171a3.js.map"}